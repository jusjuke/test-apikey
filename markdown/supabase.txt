# Supabase 통합 가이드

## 1. 환경 설정
.env.local 파일에 Supabase 인증 정보를 설정:

# Supabase Connection
NEXT_PUBLIC_SUPABASE_URL=your-project-url
NEXT_PUBLIC_SUPABASE_ANON_KEY=your-anon-key

# Database Connection
SUPABASE_DB_HOST=your-db-host
SUPABASE_DB_PORT=5432
SUPABASE_DB_NAME=your-db-name
SUPABASE_DB_USER=postgres
SUPABASE_DB_PASSWORD=your-db-password
SUPABASE_SERVICE_ROLE_KEY=your-service-role-key

## 2. 필요한 패키지 설치
npm install @supabase/supabase-js

## 3. 데이터베이스 스키마 설정
Supabase SQL 에디터에서 실행할 SQL:

-- api_keys 테이블 생성
CREATE TABLE IF NOT EXISTS api_keys (
    id UUID DEFAULT uuid_generate_v4() PRIMARY KEY,
    name TEXT NOT NULL,
    key TEXT NOT NULL,
    usage INTEGER DEFAULT 0,
    created_at TIMESTAMP WITH TIME ZONE DEFAULT TIMEZONE('utc'::text, NOW()) NOT NULL,
    updated_at TIMESTAMP WITH TIME ZONE DEFAULT TIMEZONE('utc'::text, NOW()) NOT NULL
);

-- RLS 정책 설정
ALTER TABLE api_keys ENABLE ROW LEVEL SECURITY;

-- 익명 사용자를 위한 RLS 정책 설정
CREATE POLICY "Enable insert for anon users" ON api_keys FOR INSERT TO anon WITH CHECK (true);
CREATE POLICY "Enable select for anon users" ON api_keys FOR SELECT TO anon USING (true);
CREATE POLICY "Enable update for anon users" ON api_keys FOR UPDATE TO anon USING (true) WITH CHECK (true);
CREATE POLICY "Enable delete for anon users" ON api_keys FOR DELETE TO anon USING (true);

## 4. 파일 구조
/src
  /lib
    - supabase.ts (Supabase 클라이언트 설정)
  /components
    - SupabaseProvider.tsx (Supabase Context Provider)
  /app
    - layout.tsx (Provider 적용)
    /dashboard
      - page.tsx (API 키 관리 페이지)

## 5. 주요 기능 구현
1. API 키 관리 (CRUD)
   - 생성: handleCreateKey
   - 조회: fetchApiKeys
   - 수정: handleSaveEdit
   - 삭제: handleDeleteKey

2. 보안 기능
   - API 키 마스킹
   - 키 표시/숨김 토글
   - 클립보드 복사

3. 에러 처리
   - try-catch 구문 사용
   - 사용자 친화적 에러 메시지
   - 연결 상태 모니터링

## 6. 문제 해결
1. RLS 정책 오류
   - 정책이 올바르게 설정되었는지 확인
   - 각 작업별 권한 확인

2. 연결 오류
   - 환경 변수 확인
   - 네트워크 상태 확인
   - 콘솔 로그 확인

3. 데이터 동기화
   - 실시간 업데이트 확인
   - 캐시 관리
   - 상태 관리 검증

## 7. 보안 고려사항
1. 환경 변수 관리
   - .env.local 파일을 .gitignore에 포함
   - 민감한 정보 보호

2. API 키 보안
   - 마스킹 처리
   - 클립보드 복사 시 주의
   - 표시/숨김 기능 구현

3. 데이터베이스 보안
   - RLS 정책 적절히 설정
   - 인증된 사용자만 접근 가능하도록 설정 